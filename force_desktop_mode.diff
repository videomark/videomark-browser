diff --git a/chrome/android/java/src/org/chromium/chrome/browser/externalnav/ExternalNavigationHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/externalnav/ExternalNavigationHandler.java
index bf59138..e77a215 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/externalnav/ExternalNavigationHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/externalnav/ExternalNavigationHandler.java
@@ -392,6 +392,11 @@ public class ExternalNavigationHandler {
             return OverrideUrlLoadingResult.NO_OVERRIDE;
         }
 
+        if (mDelegate.getEnableSodium() && params.getUrl().matches(".*youtube\\.com(\\/.*)?")) {
+            if (DEBUG) Log.i(TAG, "NO_OVERRIDE: YouTube URL for sodium.");
+            return OverrideUrlLoadingResult.NO_OVERRIDE;
+        }
+
         // Special case - It makes no sense to use an external application for a YouTube
         // pairing code URL, since these match the current tab with a device (Chromecast
         // or similar) it is supposed to be controlling. Using a different application
diff --git a/content/browser/frame_host/navigation_controller_impl.cc b/content/browser/frame_host/navigation_controller_impl.cc
index dacaa68..622a722 100644
--- a/content/browser/frame_host/navigation_controller_impl.cc
+++ b/content/browser/frame_host/navigation_controller_impl.cc
@@ -86,6 +86,7 @@
 #include "third_party/blink/public/common/blob/blob_utils.h"
 #include "third_party/blink/public/common/mime_util/mime_util.h"
 #include "url/url_constants.h"
+#include "url/sodium_whitelist.h"
 
 namespace content {
 namespace {
@@ -965,6 +966,11 @@ bool NavigationControllerImpl::PendingEntryMatchesHandle(
          pending_entry_->GetUniqueID() == handle->pending_nav_entry_id();
 }
 
+bool NavigationEntryIsOverridingUserAgent(bool enable_sodium, NavigationEntry* entry) {
+  return entry && (entry->GetIsOverridingUserAgent() ||
+    (enable_sodium && url::SodiumWhitelist::IsForceDesktopMode(entry->GetURL())));
+}
+
 bool NavigationControllerImpl::RendererDidNavigate(
     RenderFrameHostImpl* rfh,
     const FrameHostMsg_DidCommitProvisionalLoad_Params& params,
@@ -974,19 +980,21 @@ bool NavigationControllerImpl::RendererDidNavigate(
     NavigationRequest* navigation_request) {
   DCHECK(navigation_request);
   is_initial_navigation_ = false;
+  bool enable_sodium = GetEnableSodium();
 
   // Save the previous state before we clobber it.
   bool overriding_user_agent_changed = false;
   if (GetLastCommittedEntry()) {
     details->previous_url = GetLastCommittedEntry()->GetURL();
     details->previous_entry_index = GetLastCommittedEntryIndex();
-    if (pending_entry_ &&
-        pending_entry_->GetIsOverridingUserAgent() !=
-            GetLastCommittedEntry()->GetIsOverridingUserAgent())
+    if (NavigationEntryIsOverridingUserAgent(enable_sodium, pending_entry_) !=
+        NavigationEntryIsOverridingUserAgent(enable_sodium, GetLastCommittedEntry()))
       overriding_user_agent_changed = true;
   } else {
     details->previous_url = GURL();
     details->previous_entry_index = -1;
+    if (NavigationEntryIsOverridingUserAgent(enable_sodium, pending_entry_))
+      overriding_user_agent_changed = true;
   }
 
   // TODO(altimin, crbug.com/933147): Remove this logic after we are done with
@@ -1015,6 +1023,8 @@ bool NavigationControllerImpl::RendererDidNavigate(
   if (pending_entry_ && pending_entry_->restore_type() != RestoreType::NONE) {
     pending_entry_->set_restore_type(RestoreType::NONE);
     was_restored = true;
+    if (NavigationEntryIsOverridingUserAgent(enable_sodium, pending_entry_))
+      overriding_user_agent_changed = true;
   }
 
   // If this is a navigation to a matching pending_entry_ and the SiteInstance
diff --git a/content/browser/frame_host/navigation_request.cc b/content/browser/frame_host/navigation_request.cc
index 35381af..344823c 100644
--- a/content/browser/frame_host/navigation_request.cc
+++ b/content/browser/frame_host/navigation_request.cc
@@ -102,6 +102,7 @@
 #include "third_party/blink/public/platform/resource_request_blocked_reason.h"
 #include "third_party/blink/public/platform/web_mixed_content_context_type.h"
 #include "url/url_constants.h"
+#include "url/sodium_whitelist.h"
 
 namespace content {
 
@@ -879,11 +880,15 @@ NavigationRequest::NavigationRequest(
     }
   }
 
+  blink::mojom::RendererPreferences renderer_preferences = frame_tree_node_->render_manager()->current_host()->GetDelegate()
+    ->GetRendererPrefs(frame_tree_node_->navigator()->GetController()->GetBrowserContext());
   std::string user_agent_override;
   if (commit_params_->is_overriding_user_agent ||
+      (renderer_preferences.enable_sodium && entry && url::SodiumWhitelist::IsForceDesktopMode(entry->GetURL())) ||
       (entry && entry->GetIsOverridingUserAgent())) {
     user_agent_override =
         frame_tree_node_->navigator()->GetDelegate()->GetUserAgentOverride();
+    commit_params_->is_overriding_user_agent = true; // used by navigator.userAgent
   }
 
   net::HttpRequestHeaders headers;
diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index fbc1dc3..8666730e 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -41,6 +41,7 @@
 #include "components/download/public/common/download_stats.h"
 #include "components/rappor/public/rappor_utils.h"
 #include "components/url_formatter/url_formatter.h"
+#include "components/version_info/version_info.h"
 #include "content/browser/accessibility/accessibility_tree_formatter_blink.h"
 #include "content/browser/bad_message.h"
 #include "content/browser/browser_main_loop.h"
@@ -136,6 +137,7 @@
 #include "content/public/common/referrer_type_converters.h"
 #include "content/public/common/result_codes.h"
 #include "content/public/common/url_utils.h"
+#include "content/public/common/user_agent.h"
 #include "content/public/common/web_preferences.h"
 #include "media/base/user_input_monitor.h"
 #include "net/base/url_util.h"
@@ -162,6 +164,7 @@
 #include "ui/events/base_event_utils.h"
 #include "ui/events/blink/web_input_event_traits.h"
 #include "ui/gl/gl_switches.h"
+#include "url/sodium_whitelist.h"
 
 #if defined(OS_WIN)
 #include "content/browser/renderer_host/dip_util.h"
@@ -1290,8 +1293,7 @@ void WebContentsImpl::SetUserAgentOverride(const std::string& override,
 
   // Reload the page if a load is currently in progress to avoid having
   // different parts of the page loaded using different user agents.
-  NavigationEntry* entry = controller_.GetVisibleEntry();
-  if (IsLoading() && entry != nullptr && entry->GetIsOverridingUserAgent())
+  if (IsLoading() && IsOverridingUserAgent())
     controller_.Reload(ReloadType::BYPASSING_CACHE, true);
 
   for (auto& observer : observers_)
@@ -3212,8 +3214,10 @@ FrameTree* WebContentsImpl::GetFrameTree() {
 }
 
 bool WebContentsImpl::IsOverridingUserAgent() {
-  return GetController().GetVisibleEntry() &&
-         GetController().GetVisibleEntry()->GetIsOverridingUserAgent();
+  // used by viewport
+  NavigationEntry* entry = controller_.GetVisibleEntry();
+  return entry && (entry->GetIsOverridingUserAgent() ||
+    (renderer_preferences_.enable_sodium && url::SodiumWhitelist::IsForceDesktopMode(entry->GetURL())));
 }
 
 bool WebContentsImpl::IsJavaScriptDialogShowing() const {
@@ -7237,6 +7241,17 @@ void WebContentsImpl::UpdateWebContentsVisibility(Visibility visibility) {
 }
 
 void WebContentsImpl::UpdateOverridingUserAgent() {
+  // override chrome/browser/android/content/content_utils.cc
+  if (renderer_preferences_.enable_sodium) {
+    const char kLinuxInfoStr[] = "X11; Linux x86_64";
+    const char kWindowsInfoStr[] = "Windows NT 10.0; Win64; x64";
+    std::string product = version_info::GetProductNameAndVersionForUserAgent();
+    std::string spoofed_ua = content::BuildUserAgentFromOSAndProduct(
+      url::SodiumWhitelist::IsForceDesktopMode(GetVisibleURL())
+      ? kWindowsInfoStr : kLinuxInfoStr, product);
+    SetUserAgentOverride(spoofed_ua, false);
+  }
+
   NotifyPreferencesChanged();
 }
 
