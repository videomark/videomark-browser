diff --git a/chrome/android/java/res/menu/main_menu.xml b/chrome/android/java/res/menu/main_menu.xml
index 4580a99..3c69051 100644
--- a/chrome/android/java/res/menu/main_menu.xml
+++ b/chrome/android/java/res/menu/main_menu.xml
@@ -40,6 +40,8 @@
             android:title="@null" />
         <item android:id="@+id/recent_tabs_menu_id"
             android:title="@string/menu_recent_tabs" />
+        <item android:id="@+id/sodium_result_id"
+            android:title="@string/menu_sodium_result" />
         <item android:id="@+id/open_history_menu_id"
             android:title="@string/menu_history" />
         <item android:id="@+id/downloads_menu_id"
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
index 46f734b..c49faae 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
@@ -2155,6 +2155,18 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         } else if (id == R.id.info_menu_id) {
             PageInfoController.show(
                     this, currentTab, null, PageInfoController.OpenedFromSource.MENU);
+        } else if (id == R.id.sodium_result_id) {
+            String url = "chrome://videomark/";
+            if (NewTabPage.isNTPUrl(currentTab.getUrl())) {
+                currentTab.loadUrl(new LoadUrlParams(url));
+            } else if (currentTab.getUrl().startsWith(url)) {
+                currentTab.reload();
+            } else {
+                TabCreator tabCreator = getTabCreator(currentTab.isIncognito());
+                if (tabCreator == null) return false;
+
+                tabCreator.createNewTab(new LoadUrlParams(url, PageTransition.LINK), TabLaunchType.FROM_LINK, getActivityTab());
+            }
         } else if (id == R.id.open_history_menu_id) {
             if (NewTabPage.isNTPUrl(currentTab.getUrl())) {
                 NewTabPageUma.recordAction(NewTabPageUma.ACTION_OPENED_HISTORY_MANAGER);
diff --git a/chrome/android/java/strings/android_chrome_strings.grd b/chrome/android/java/strings/android_chrome_strings.grd
index 62a0dc8..ed0dda3 100644
--- a/chrome/android/java/strings/android_chrome_strings.grd
+++ b/chrome/android/java/strings/android_chrome_strings.grd
@@ -2947,6 +2947,9 @@ To change this setting, <ph name="BEGIN_LINK">&lt;resetlink&gt;</ph>reset sync<p
       <message name="IDS_MENU_RECENT_TABS" desc="Menu item for opening the 'Recent tabs' page that shows recently closed tabs and pages the user has opened on his/her other devices. [CHAR-LIMIT=27]">
         Recent tabs
       </message>
+      <message name="IDS_MENU_SODIUM_RESULT" desc="Menu item for Sodium result">
+        動画の視聴結果を確認
+      </message>
       <message name="IDS_MENU_HISTORY" desc="Menu item for opening the history page. [CHAR-LIMIT=27]">
         History
       </message>
diff --git a/chrome/browser/browser_resources.grd b/chrome/browser/browser_resources.grd
index c0cef30..fa1733f 100644
--- a/chrome/browser/browser_resources.grd
+++ b/chrome/browser/browser_resources.grd
@@ -133,6 +133,19 @@
         <include name="IDR_ABOUT_SYS_CSS" file="resources\about_sys\about_sys.css" compress="gzip" flattenhtml="true" type="BINDATA" />
         <include name="IDR_ABOUT_SYS_JS" file="resources\about_sys\about_sys.js" compress="gzip" type="BINDATA" />
       </if>
+      <include name="IDR_SODIUM_RESULT_INDEX_HTML" file="resources\sodium_result\index.html" flattenhtml="true" allowexternalscript="true" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_VIDEOMARK_64_PNG" file="resources\sodium_result\videomark-64.png" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_VIDEOMARK_96_PNG" file="resources\sodium_result\videomark-96.png" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_VIDEOMARK_192_PNG" file="resources\sodium_result\videomark-192.png" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_CSS_MAIN_CSS" file="resources\sodium_result\static\css\main.chunk.css" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_JS_2_JS" file="resources\sodium_result\static\js\2.chunk.js" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_JS_MAIN_JS" file="resources\sodium_result\static\js\main.chunk.js" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_JS_RUNTIME_MAIN_JS" file="resources\sodium_result\static\js\runtime~main.js" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_MEDIA_ABOUT_HELP_SVG" file="resources\sodium_result\static\media\about-help.svg" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_MEDIA_DINO_PNG" file="resources\sodium_result\static\media\dino.png" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_MEDIA_NOIMAGE_SVG" file="resources\sodium_result\static\media\noimage.svg" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_MEDIA_REFRESH_SVG" file="resources\sodium_result\static\media\refresh.svg" type="BINDATA" skip_minify="true" compress="gzip" />
+      <include name="IDR_SODIUM_RESULT_STATIC_MEDIA_TIMES_SVG" file="resources\sodium_result\static\media\times.svg" type="BINDATA" skip_minify="true" compress="gzip" />
       <include name="IDR_ACCESSIBILITY_HTML" file="resources\accessibility\accessibility.html" flattenhtml="true" allowexternalscript="true" compress="gzip" type="BINDATA" />
       <include name="IDR_ACCESSIBILITY_CSS" file="resources\accessibility\accessibility.css" compress="gzip" type="BINDATA" />
       <include name="IDR_ACCESSIBILITY_JS" file="resources\accessibility\accessibility.js" flattenhtml="true" compress="gzip" type="BINDATA" />
diff --git a/chrome/browser/ui/BUILD.gn b/chrome/browser/ui/BUILD.gn
index 3ec0ed4..0d27711 100644
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -333,6 +333,8 @@ jumbo_split_static_library("ui") {
     "webui/webui_load_timer.h",
     "webui/webui_util.cc",
     "webui/webui_util.h",
+    "webui/sodium_result.cc",
+    "webui/sodium_result.h",
   ]
 
   if (is_win || is_mac) {
diff --git a/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc b/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
index 8f6d49b..52b6e61 100644
--- a/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
+++ b/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
@@ -64,6 +64,7 @@
 #include "chrome/browser/ui/webui/usb_internals/usb_internals_ui.h"
 #include "chrome/browser/ui/webui/user_actions/user_actions_ui.h"
 #include "chrome/browser/ui/webui/version_ui.h"
+#include "chrome/browser/ui/webui/sodium_result.h"
 #include "chrome/common/buildflags.h"
 #include "chrome/common/chrome_features.h"
 #include "chrome/common/pref_names.h"
@@ -420,6 +421,8 @@ WebUIFactoryFunction GetWebUIFactoryFunction(WebUI* web_ui,
     return &NewWebUI<UserActionsUI>;
   if (url.host_piece() == chrome::kChromeUIVersionHost)
     return &NewWebUI<VersionUI>;
+  if (url.host_piece() == chrome::kChromeUISodiumResultHost)
+    return &NewWebUI<SodiumResult>;
 
   /****************************************************************************
    * OS Specific #defines
@@ -838,6 +841,7 @@ bool ChromeWebUIControllerFactory::IsWebUIAllowedToMakeNetworkRequests(
   // If you are adding a new host to this list, please file a corresponding bug
   // to track its removal. See https://crbug.com/829412 for the metabug.
   return
+      origin.host() == chrome::kChromeUISodiumResultHost ||
 #if BUILDFLAG(ENABLE_PRINT_PREVIEW)
       // https://crbug.com/829414
       origin.host() == chrome::kChromeUIPrintHost ||
diff --git a/chrome/browser/ui/webui/sodium_result.cc b/chrome/browser/ui/webui/sodium_result.cc
new file mode 100644
index 0000000..ecfe1ec
--- /dev/null
+++ b/chrome/browser/ui/webui/sodium_result.cc
@@ -0,0 +1,42 @@
+#include "chrome/browser/ui/webui/sodium_result.h"
+
+#include <memory>
+
+#include "chrome/browser/profiles/profile.h"
+#include "chrome/common/webui_url_constants.h"
+#include "chrome/grit/browser_resources.h"
+#include "content/public/browser/web_ui_data_source.h"
+
+using content::WebUIDataSource;
+
+namespace {
+
+WebUIDataSource* CreateSodiumResultDataSource() {
+  WebUIDataSource* html_source = WebUIDataSource::Create(chrome::kChromeUISodiumResultHost);
+  html_source->AddResourcePath("videomark-64.png",  IDR_SODIUM_RESULT_VIDEOMARK_64_PNG);
+  html_source->AddResourcePath("videomark-96.png",  IDR_SODIUM_RESULT_VIDEOMARK_96_PNG);
+  html_source->AddResourcePath("videomark-192.png", IDR_SODIUM_RESULT_VIDEOMARK_192_PNG);
+
+  html_source->AddResourcePath("static/css/main.chunk.css", IDR_SODIUM_RESULT_STATIC_CSS_MAIN_CSS);
+  html_source->AddResourcePath("static/js/2.chunk.js",      IDR_SODIUM_RESULT_STATIC_JS_2_JS);
+  html_source->AddResourcePath("static/js/main.chunk.js",   IDR_SODIUM_RESULT_STATIC_JS_MAIN_JS);
+  html_source->AddResourcePath("static/js/runtime~main.js", IDR_SODIUM_RESULT_STATIC_JS_RUNTIME_MAIN_JS);
+  html_source->AddResourcePath("static/media/about-help.svg", IDR_SODIUM_RESULT_STATIC_MEDIA_ABOUT_HELP_SVG);
+  html_source->AddResourcePath("static/media/dino.png",       IDR_SODIUM_RESULT_STATIC_MEDIA_DINO_PNG);
+  html_source->AddResourcePath("static/media/noimage.svg",    IDR_SODIUM_RESULT_STATIC_MEDIA_NOIMAGE_SVG);
+  html_source->AddResourcePath("static/media/refresh.svg",  IDR_SODIUM_RESULT_STATIC_MEDIA_REFRESH_SVG);
+  html_source->AddResourcePath("static/media/times.svg",    IDR_SODIUM_RESULT_STATIC_MEDIA_TIMES_SVG);
+
+  html_source->SetDefaultResource(IDR_SODIUM_RESULT_INDEX_HTML);
+  return html_source;
+}
+
+}  // namespace
+
+SodiumResult::SodiumResult(content::WebUI* web_ui) : content::WebUIController(web_ui) {
+  Profile* profile = Profile::FromWebUI(web_ui);
+  WebUIDataSource::Add(profile, CreateSodiumResultDataSource());
+}
+
+SodiumResult::~SodiumResult() {
+}
diff --git a/chrome/browser/ui/webui/sodium_result.h b/chrome/browser/ui/webui/sodium_result.h
new file mode 100644
index 0000000..47ddfc0
--- /dev/null
+++ b/chrome/browser/ui/webui/sodium_result.h
@@ -0,0 +1,17 @@
+#ifndef CHROME_BROWSER_UI_WEBUI_SODIUM_RESULT_H_
+#define CHROME_BROWSER_UI_WEBUI_SODIUM_RESULT_H_
+
+#include "base/macros.h"
+#include "content/public/browser/web_ui_controller.h"
+
+// The WebUI handler for chrome://videomark.
+class SodiumResult : public content::WebUIController {
+ public:
+  explicit SodiumResult(content::WebUI* web_ui);
+  ~SodiumResult() override;
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(SodiumResult);
+};
+
+#endif  // CHROME_BROWSER_UI_WEBUI_SODIUM_RESULT_H_
diff --git a/chrome/common/webui_url_constants.cc b/chrome/common/webui_url_constants.cc
index 4ea75d7..f684140 100644
--- a/chrome/common/webui_url_constants.cc
+++ b/chrome/common/webui_url_constants.cc
@@ -17,6 +17,8 @@ namespace chrome {
 // Note: Add hosts to |kChromeHostURLs| at the bottom of this file to be listed
 // by chrome://chrome-urls (about:about) and the built-in AutocompleteProvider.
 
+const char kChromeUISodiumResultHost[] = "videomark";
+const char kChromeUISodiumResultURL[] = "chrome://videomark/";
 const char kChromeUIAboutHost[] = "about";
 const char kChromeUIAboutURL[] = "chrome://about/";
 const char kChromeUIAccessibilityHost[] = "accessibility";
diff --git a/chrome/common/webui_url_constants.h b/chrome/common/webui_url_constants.h
index f6935a3..a035acc 100644
--- a/chrome/common/webui_url_constants.h
+++ b/chrome/common/webui_url_constants.h
@@ -25,6 +25,8 @@ namespace chrome {
 // Not all components have corresponding URLs and vice versa. Only add as
 // needed.
 // Please keep in alphabetical order, with OS/feature specific sections below.
+extern const char kChromeUISodiumResultHost[];
+extern const char kChromeUISodiumResultURL[];
 extern const char kChromeUIAboutHost[];
 extern const char kChromeUIAboutURL[];
 extern const char kChromeUIAccessibilityHost[];
